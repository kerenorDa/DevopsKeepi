name: Build, Test, and Deploy Blazor WebAssembly

on:
  push:
    branches:
      - develop
      - staging
      - master
  pull_request:
    branches:
      - develop
      - staging
      - master

jobs:
  # ωμα 1: Build + Test
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0'

    - name: Install dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release

    - name: Run Tests
      run: dotnet test

  # ωμα 2: Deploy μ-Development
  deploy-development:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
        sudo apt-get purge -y containerd.io || true
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Deploy to Development
      run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d

  # ωμα 3: Deploy μ-Staging
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
        sudo apt-get purge -y containerd.io || true
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Deploy to Staging
      run: docker-compose -f docker-compose.yml -f docker-compose.staging.yml up -d

  # ωμα 4: Deploy μ-Production
  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
        sudo apt-get purge -y containerd.io || true
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker --version
        docker-compose --version

    - name: Deploy to Production
      run: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

